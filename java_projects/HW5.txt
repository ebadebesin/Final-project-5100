Non-programming Assignment

1) Describe strings in Java and major operations with them
ANSWER
A String type and respectively a string variable contains a collection of characters
surrounded by double quotes. Strings are used to represent text in Java programs. 
Some Major operations with strings include:
- Concatenation: combining two or more strings to form a new string
- Substring: extracting a part of a string
- Length: getting the number of characters in a string
- Indexing: accessing a character at a specific position in a string
- Conversion to Upper/Lower Case: str.toUpperCase(), str.toLowerCase()


2) Describe linear and non-linear data structures in Java
ANSWER
Linear data structures in Java are elements that are stored in a sequential manner. Examples
of linear data structures include:
- Arrays: a collection of elements of the same data type stored in contiguous memory locations
- Linked Lists: a dynamic collection of elements (nodes), where each element points to the next element
- Stacks: a Last-In-First-Out (LIFO) data structure, where elements are pushed and popped from the top
- Queues: a First-In-First-Out (FIFO) data structure, where elements are added to the end and removed from the front

Non-linear data structures in Java are elements that are not stored in a sequence or a list
Examples of non-linear data structures include:
- Trees: a hierarchical data structure, where each node has a value and child nodes
- Graphs: a non-linear data structure consisting of nodes or vertices connected by edges


3) Describe arrays and matrices in Java
ANSWER
Arrays in Java are a collection of elements of the same data type stored in contiguous memory locations.
Arrays are used to store a fixed-size collection of elements. Arrays can be one-dimensional (1Darrays) or multi-dimensional (2D arrays, 3D arrays, etc.). 
E.g. int[] arr = new int[5]; (Single-dimensional array)

Matrices on the other hand are 2-dimensional arrays, most times used to represent data in a grid or table format.
E.g. int[][] matrix = new int[3][3]; (2D array (matrix) )

Major differences between Array and Matrices are:
- Arrays are indexed, and each element can be accessed via its index, starting from 0.
    Matrices are multi-dimensional arrays that require two (or more) indices to access elements.
- Arrays are used for storing a collection of elements, while matrices are used for storing data in a grid or table format.


4) Describe ArraysList in Java and explain its difference from Array.
ANSWER
ArrayList in Java is a resizable-array implementation of the List interface used to store a collection of elements. 
ArrayList is a dynamic array, meaning that it can grow or shrink as elements are added or removed. 
Define Array list like this: ArrayList<Integer> list = new ArrayList<>();

Some differences between Array and ArrayList are:
- Arrays have a fixed size, while ArrayList can change its size dynamically.
- Arrays are indexed, while ArrayList uses an index, but also allows for other methods like add(),
remove(), etc.
- Arrays are generally faster than ArrayList due to its dynamic resizing, but ArrayList is more convenient and flexible.
- Arrays are more memory-efficient than ArrayList, but ArrayList is more suitable for large datasets.


5) Describe LinkedList in Java
ANSWER
LinkedList in Java is a dynamic collection of elements (nodes), where each element points to the next
element. Each element in a LinkedList is stored in a node that contains a reference to the next and previous nodes. 
It allows efficient insertion and removal of elements at both ends of the list. 
Define LinkedList like this: LinkedList<String> list = new LinkedList<>();


6) Describe HashSet and HashMap in Java
ANSWER
HashSet in Java is a collection of unique elements, where each element is a key and does not allow duplicates. 
Define HashSet like this: HashSet<String> set = new HashSet<>();

HashMap in Java is a collection of key-value pairs, that allows fast lookups, insertions, and deletions using hashing. 
Each key maps to a specific value, and no duplicate keys are allowed.
Define HashMap like this: HashMap<String, Integer> map = new HashMap<>();

Key differences:
HashSet only stores individual elements, whereas HashMap stores key-value pairs.
HashSet ensures unique elements, while HashMap ensures unique keys.


7) Describe Stacks and their hierarchy in Java
ANSWER
Stack in Java is a linear data structure that follows the Last-In-First-Out (LIFO) principle. 
It is a collection of elements that can be added and removed from the top of the
stack. Define Stack like this: Stack<String> stack = new Stack<>();

Hierarchy: 
Stack extends Vector class, which implements list interface, which then extends Collections Interface.
So basically, Stack is a subclass of Vector, which is a subclass of List, which is a subclass of Collection.
Stack is a part of the Java Collections Framework.


8) Describe Queues in Java
ANSWER
Queue in Java is a linear data structure that follows the First-In-First-Out (FIFO) principle.
It is a collection of elements that can be added to the end of the queue and removed from the front of the queue. 
Define Queue like this: Queue<String> queue = new LinkedList<>();

